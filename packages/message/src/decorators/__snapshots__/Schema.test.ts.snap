// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Schema Decorator should add metadata 1`] = `
{
  "fields": [
    {
      "decorator": "Field",
      "enum": null,
      "fallback": null,
      "key": "name",
      "max": null,
      "min": null,
      "nullable": false,
      "optional": false,
      "schema": null,
      "type": null,
    },
  ],
  "generated": [],
  "hooks": [],
  "message": {
    "decorator": "Message",
    "name": "SchemaDecoratorMessage",
    "namespace": null,
    "target": [Function],
    "topic": null,
  },
  "priority": undefined,
  "schema": ZodObject {
    "_cached": null,
    "_def": {
      "catchall": ZodNever {
        "_def": {
          "typeName": "ZodNever",
        },
        "and": [Function],
        "array": [Function],
        "brand": [Function],
        "catch": [Function],
        "default": [Function],
        "describe": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "or": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "pipe": [Function],
        "promise": [Function],
        "readonly": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
        "~standard": {
          "validate": [Function],
          "vendor": "zod",
          "version": 1,
        },
      },
      "shape": [Function],
      "typeName": "ZodObject",
      "unknownKeys": "strip",
    },
    "and": [Function],
    "array": [Function],
    "augment": [Function],
    "brand": [Function],
    "catch": [Function],
    "default": [Function],
    "describe": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nonstrict": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "or": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "pipe": [Function],
    "promise": [Function],
    "readonly": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
    "~standard": {
      "validate": [Function],
      "vendor": "zod",
      "version": 1,
    },
  },
  "topic": undefined,
}
`;
